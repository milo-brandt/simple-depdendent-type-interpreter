# TEST BEGIN
# TEST NAME A rule relying on the judgemental equality of a match arm computes.
# TEST MUST_COMPILE

block {
  axiom Bool : Type;
  axiom yes : Bool;
  axiom no : Bool;

  axiom Maybe : Type -> Type;
  axiom some : (T : Type) -> T -> Maybe T;
  axiom none : (T : Type) -> Maybe T;

  axiom Fam : Bool -> Type;
  axiom yes_fam : Fam yes;
  axiom no_fam : Fam no;

  declare weird : (f : Bool -> Bool) -> Fam (f yes) -> Maybe (Fam no);
  weird f x = match(f yes) {
    no -> some _ x;
    yes -> none _;
  };

  declare not : Bool -> Bool;
  not yes = no;
  not no = yes;

  verify weird (\x.no) no_fam = some _ no_fam;
  verify weird not no_fam = some _ no_fam;
  verify weird (\x.yes) yes_fam = none (Fam no);
  verify weird (\x.x) yes_fam = none (Fam no);

  yes
}
