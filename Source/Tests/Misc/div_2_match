# TEST BEGIN
# TEST NAME A match arm relying on the judgemental equality the match computes.
# TEST SET expr

block {
  axiom Pair : (T : Type) -> Type;
  axiom pair : (T : Type) -> T -> T -> Pair T;
  axiom Nat : Type;
  axiom zero : Nat;
  axiom succ : Nat -> Nat;

  axiom Bool : Type;
  axiom yes : Bool;
  axiom no : Bool;

  axiom Witness : Bool -> Type;
  axiom witness : Witness yes;

  declare no_witness : (T : Type) -> Witness no -> T;

  declare even : Nat -> Bool;
  even zero = yes;
  even (succ zero) = no;
  even (succ (succ n)) = even n;

  declare div_2 : (n : Nat) -> Witness (even n) -> Nat;
  div_2 zero w = zero;
  div_2 (succ zero) w = no_witness Nat w;
  div_2 (succ (succ n)) w = succ (div_2 n w);

  declare div_2_if_possible : Nat -> Nat;
  div_2_if_possible n = match (even n) -> Nat {
    yes -> div_2 n witness;
    no -> n;
  };

  pair _
    (div_2_if_possible (succ \\ succ \\ succ \\ succ zero))
    (succ \\ succ zero)
}


# TEST DEFINITION

auto unfolded = unfold(environment.arena(), expr.value);
REQUIRE(unfolded.args.size() == 3);
REQUIRE(unfolded.args[1] == unfolded.args[2]);
