# TEST BEGIN
# TEST NAME A simple match statement can be defined.
# TEST SET expr

block {
  axiom Pair : (T : Type) -> Type;
  axiom pair : (T : Type) -> T -> T -> Pair T;

  axiom Nat : Type;
  axiom zero : Nat;
  axiom succ : Nat -> Nat;

  let pred = \n.match(n) -> Nat {
    zero -> zero;
    succ m -> m;
  };

  pair Nat
    (pred (succ \\ succ \\ succ zero))
    (succ \\ succ zero)
}

# TEST DEFINITION

auto unfolded = unfold(arena, expr.value);
REQUIRE(unfolded.args.size() == 3);
REQUIRE(unfolded.args[1] == unfolded.args[2]);
