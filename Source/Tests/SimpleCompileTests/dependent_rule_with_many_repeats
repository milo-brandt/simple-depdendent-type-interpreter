# TEST BEGIN
# TEST NAME A dependent pattern with many redundant captures is accepted and computes.
# TEST SET expr

block {
  axiom Wrap : Type -> Type;
  axiom wrap : (T : Type) -> T -> Wrap T;

  declare unwrap : (T : Type) -> Wrap T -> T;
  unwrap T (wrap T x) = x;

  declare wrap_first : (T : Type) -> Wrap T -> Wrap T -> Wrap T;
  wrap_first A (wrap B x) (wrap C y) = wrap A x;

  unwrap U64 (wrap_first U64 (wrap U64 17) (wrap U64 34))
}

# TEST SET simple

17

# TEST DEFINITION

REQUIRE(expr == simple);
