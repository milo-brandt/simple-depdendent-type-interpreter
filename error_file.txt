
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
program is a Catch v2.9.2 host application.
Run with -? for options

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A dependent pattern with redundant captures is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:9
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:66: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule_with_repeats

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A simple dependent pattern is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:69
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:126: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A dependent pattern with many redundant captures is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:129
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:189: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule_with_many_repeats

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial type verify statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:192
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:219: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/verify_type_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A simple match statement can be defined.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:222
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:270: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/match_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Equal literals are treated as equal values.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:273
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:304: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/literals_equal

---------------------------------------------------------------------------------------------------------------------------------------------------------------
An expression with nested operations on literals evaluates.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:307
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:356: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/deep_add

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial verify statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:359
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:386: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/verify_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax sugar for arrow types expands properly.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:389
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:418: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/arrow_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A simple dependent pattern defined with a subclause is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:421
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:480: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule_with_subclause

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern defined with a subclause is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:483
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:546: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/subclause_rule

---------------------------------------------------------------------------------------------------------------------------------------------------------------
The constant lambda is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:549
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:598: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/lambda_constant

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require statements can force deduction of untyped holes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:601
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:654: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_deduction_of_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial require type and value statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:657
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:684: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_both_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial require statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:687
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:714: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Comments are ignored.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:717
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:768: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/comment

---------------------------------------------------------------------------------------------------------------------------------------------------------------
The identity pattern is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:771
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:824: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/basic_rule

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial type and value verify statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:827
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:854: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/verify_both_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A partial evaluation of an external function works with functional constructs.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:857
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:906: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/iterated_add

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A dependent pattern including holes is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:909
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:966: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule_with_holes

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Syntax sugar for dependent types expands properly.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:969
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:997: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A hole in a context where $0 = zero can be deduced.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1000
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1037: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/deduction_in_nontrivial_context

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require can correctly see that two similar lambdas are equal.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1040
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1067: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_lambda

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A trivial require type statement does not hold up compilation.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1070
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1097: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_type_statement

---------------------------------------------------------------------------------------------------------------------------------------------------------------
An expression with literal addition evaluates.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1100
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1149: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/add

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require statements can force deduction of holes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1152
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1205: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/require_deduction

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A dependent pattern involving a declaration-headed subexpression compiles and runs.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1208
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1265: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/dependent_rule_with_check

---------------------------------------------------------------------------------------------------------------------------------------------------------------
The identity lambda is accepted and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1268
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1317: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/lambda_id

---------------------------------------------------------------------------------------------------------------------------------------------------------------
An expression requiring type deduction is resolved and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1320
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1377: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/type_deduction

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify can correctly see that two similar lambdas are equal.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1380
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1407: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/SimpleCompileTests/verify_lambda

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A program implementing well-founded induction and proving the < : Ord Nat is well-ordered functions appropriately.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1410
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1599: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Complex/well_founded_induction_on_nat

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A program implementing a stack machine with finitely many instructions (each of fixed state size) works as expected.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1602
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1814: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Complex/graph_programs

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Patterns attempting to match a declaration without justification fail.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1817
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1847: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_check_capture

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require rejects false equations in compound requirements.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1850
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1870: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_require_both_value

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify does not define holes in type equations applied to RHS.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1873
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1897: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/verify_no_deduction_type_rhs

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Expressions with unresolved identifiers are rejected.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1900
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1916: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_id

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify rejects false type equations.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1919
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1939: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_verify_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with an application to a non-function in a subpattern of the primary pattern is not accepted.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1942
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1972: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_subpattern_application

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require rejects false type equations in compound requirements with incorrect RHS type.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1975
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:1995: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_require_both_rhs

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify does not define holes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:1998
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2019: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/verify_no_deduction

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Expressions with extra end parentheses are rejected.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2022
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2038: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/extra_close_paren

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Expressions with mismatched parentheses are rejected.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2041
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2057: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/mismatched_paren

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with captures only reachable through a subclause which requires them is not accepted.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2060
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2092: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/unreachable_capture_before_subclause

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify rejects false equations in compound requirements.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2095
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2115: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_verify_both_value

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A hole cannot be deduced based upon the values it takes with extra assumptions on its arguments.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2118
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2156: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/no_deduction_with_extra_assumptions

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with an application of a capture to a non-function is not accepted.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2159
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2191: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_subclause_application

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify rejects false equations.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2194
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2214: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_verify

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with an application of a outer capture to a non-function is not accepted.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2217
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2247: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_pattern_application

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with unreachable captures does not compile.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2250
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2280: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/unreachable_capture

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify does not define holes in type equations.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2283
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2307: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/verify_no_deduction_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Patterns with an incorrect output type are not accepted.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2310
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2340: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_replacement_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Expressions with unclosed parentheses are rejected.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2343
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2359: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/unterminated_paren

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify rejects false type equations in compound requirements.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2362
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2382: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_verify_type_both

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require rejects false type equations in compound requirements.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2385
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2405: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_require_type_both

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A function's value cannot be deduced pointwise.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2408
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2440: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/no_pointwise_deduction_of_match

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require rejects false type equations.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2443
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2463: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_require_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Verify rejects false type equations in compound requirements with incorrect RHS type.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2466
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2486: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_verify_both_rhs

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern with bad double captures, bad check captures, and bad replacement types reports errors.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2489
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2519: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/multiple_problem_pattern

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Patterns repeating a capture without type constraints forcing this are invalid.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2522
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2543: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_double_capture

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Require rejects false equations.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2546
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2566: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/IllFormed/bad_require

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A definition of an N-ary function, with differing matching depths, compiles and computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2569
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2633: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/multi_depth_pattern

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A rule relying on the judgemental equality of a subclause computes, even where the rule must be applied multiple times.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2636
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2704: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/subclause_can_use_equality_deeply

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A rule relying on the judgemental equality of a match arm computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2707
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2760: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/match_can_use_equality

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A complex definition counting the steps to zero works using a match statement.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2763
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2822: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/step_counter_match

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A complex definition counting the steps to zero works, with a local declaration defined by subclauses.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2825
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2881: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/step_counter

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A complex definition returning the last iterate before hitting zero, using a local definition defined by subclauses.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2884
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:2955: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/last_iterate_before

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Rules can be declared involving types local to a non-trivial context.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:2958
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3017: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/internal_pattern

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A match arm relying on the judgemental equality the match computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3020
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3081: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/div_2_match

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A complex definition returning the last iterate before hitting zero using a match statement.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3084
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3154: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/last_iterate_before_match

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A rule relying on the judgemental equality of a subclause computes.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3157
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3216: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/subclause_can_use_equality

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Lambdas can have lambdas as part of their explicit type specification.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3219
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3246: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/lambda_in_lambda_type

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Variable indexing is preserved even after blocks in lambdas.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3249
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3305: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/tricky_indexing

---------------------------------------------------------------------------------------------------------------------------------------------------------------
Matching against identity types provides the required judgemental equalities.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3308
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3359: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/id_types

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A rule relying on the judgemental equality of a match computes, even where the rule must be applied multiple times.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3362
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3417: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/match_can_use_equality_deeply

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A pattern involving a declaration with output that is sometimes a function (matched on a bool) compiles and runs.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3420
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:3484: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/multi_depth_pattern_bool

---------------------------------------------------------------------------------------------------------------------------------------------------------------
A very large program can be compiled.
---------------------------------------------------------------------------------------------------------------------------------------------------------------
Source/Tests/full_cases_impl.cpp:3487
...............................................................................................................................................................

Source/Tests/full_cases_impl.cpp:6421: FAILED:
  REQUIRE( arena.empty() )
with expansion:
  false
with message:
  Test case from file: Source/Tests/Misc/big_test

===============================================================================================================================================================
test cases:   140 |    64 passed | 76 failed
assertions: 65955 | 65879 passed | 76 failed

